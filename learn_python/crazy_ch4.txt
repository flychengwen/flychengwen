False, None, 0, "", (), [], {}会被解释器当作False处理
pass是空语句，相当于c语言的;
assert 20 < age < 80
zip,reversed,sorted
-----------------------------------------
#eg1: while
li=[12,45,34,13,100,24,56,74,109]
aa=[]
bb=[]
cc=[]
while len(li) > 0:
    element=li.pop()
    if element % 3 == 0:
        aa.append(element)
    elif element % 3 == 1:
        bb.append(element)
    elif element % 3 == 1:
        cc.append(element)

print("aa:", aa)
print("bb:", bb)
print("cc:", cc)
------------------------------------------
#eg2: fab
result=1
s= input("please input:")
i = int(s)
for num in range(1, i+1):
    result *= num
print(result)
------------------------------------------
#eg3: traverse

li=[12, 45, 3.4, 13, 'a', 4, 56, 'crazyit', 109.5]
print('3.4 in li:', 3.4 in li)

sum=0
nr=0
for e in li:
    if isinstance(e, int) or isinstance(e, float):
        print(e)
        sum += e
        #++nr
        nr+=1
print("sum: ", sum)
print("avg:", sum/nr)

for i in range(0, len(li)):
    print('the %d is:%s' % (i, li[i]))
---------------------------------------------
#eg3: traverse dict
my_dict={'cn':89, 'math':99, 'en':80}
for key,value in my_dict.items():
    print('key', key)
    print('value', value)
print('----------------')
for key in my_dict.keys():
    print('key', key)
print('-----------------')
for value in my_dict.values():
    print('value', value)
------------------------------------------------------
li=[12,45,3.4,12, 'fkit', 45, 3.4, 'fkit', 45, 3.4]
stats={}

for ele in li:
    if ele in stats:
        stats[ele]+=1
    else:
        stats[ele]=1
for ele in li:
    print("%s appears %d times" %(ele, stats[ele]))
-----------------------------------------------------
bb=[]
for x in range(1,5):
    for y in range(1,5):
        bb.append((x,y))
print(bb)
print("\n\n")


aa = [(x,y) for x in range(1,5) for y in range(11,15)]
print(aa)
print("\n\n")


cc = [(x,y,z) for x in range(2) for y in range(1,3) for z in range(1,2)]
print(cc)
print("\n\n")
---------------------------------------------------------
a_range=range(1,10)
a_li=[x*x for x in a_range]
print(a_li)

aa = (x*x for x in range(10) if x%2 == 0)
for i in aa:
    print(i, end='\t')
print("\n\n")


a_li=[30,12,66,34,39,78,36,57,121]
b_li=[3,5,7,11]
res = [(x,y) for x in b_li for y in a_li if y%x==0]
print(res)
------------------------------------------------------------------------
zip方法：
a=['a', 'b', 'c', 'd']
b=[1,2,3]
li=zip(a,b)

for x in li:
    print(x)

#print([x for x in li])//error, and no output
print([x for x in zip(a,b)])

-------------------------------------------------------------------------
reversed方法：
a=range(1,8)
print([x for x in reversed(a)])
-------------------------------------------------------------------------
sorted方法:   #只改变输出，不改变原有序列

a=[20,30,-1.2,3.5,90,3.6]
print(sorted(a))
print(sorted(a, reverse=True))
print(a)


b=['a', 'bb', 'eeeee', 'ccc', 'dddd']
print(sorted(b, key=len, reverse=True))
for i in sorted(b, key=len):
    print(i)
-------------------------------------------------------------------------
算法1：
s=input('please input a float:')
i=float(s)

han_li=["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"]
unit_li=["shi", "bai", "qian"]

def divide(num):
    return  int(num), int(round(100*(num-int(num))))
def four2han(kk):
    res=''
    for i in range(len(str(kk))):
        #print(str(kk)[i])
        res += han_li[int(str(kk)[i])]
    #print(res)
    return res

def integer_to_str(a):
    if len(str(a)) > 12:
        return 'too large'
    elif len(str(a)) > 8:
        return four2han(int(a/100000000))+' yi '+four2han(int((a%100000000)/10000))+ ' wan ' + four2han(a%10000)
    elif len(str(a)) > 4:
        return four2han(int(a/10000))+ ' wan ' + four2han(a%10000)
    else:
        return four2han(a)

integer,fraction=divide(i)
#print(integer,fraction)
#print(len(str(integer)))
print(integer_to_str(integer))
print(fraction)
---------------------------------------------------------------------------------
内置函数enumerate:
enumerate()函数用于将一个可遍历的数据对象(如列表，元组或字符串)组合成一个索引序列，
同时列出数据和下标。

repo=dict()
li=[]

def init_repo():
    goods1=("1001", "crazy ruby", 88.0)
    goods2=("1002", "crazy swift", 69.0)
    goods3=("1003", "crazy kotlin", 59.0)
    goods4=("1004", "crazy java", 109.0)
    goods5=("1005", "crazy android", 108.0)
    goods6=("1006", "crazy ios", 77.0)

    repo[goods1[0]] =goods1
    repo[goods2[0]] =goods2
    repo[goods3[0]] =goods3
    repo[goods4[0]] =goods4
    repo[goods5[0]] =goods5
    repo[goods6[0]] =goods6

def show_goods():
    print("%13s%40s%10s" % ("isbn", "name", "price"))
    for goods in repo.values():
        print("%15s%40s%12s" % goods)
def show_list():
    print("="*100)
    if not li:
        print("buy nothing")
    else:
        title="%-5s|%15s|%40s|%10s|%4s|%10s" % ("id", "isbn", "name", "price", "num", "amount")
        print(title)
        print("-"*100)
        sum=0
        amount=0
        for i,item in enumerate(li):
            id=i+1
            isbn=item[0]
            name=repo[isbn][1]
            price=repo[isbn][2]
            num=item[1]
            amount=price*num
            sum+=amount
            print("%-5s|%15s|%40s|%10s|%4s|%10s" % (id,isbn,name,price,num,amount))
        print("-"*100)
        print("total: %60s" % sum)
        print("="*100)
def add():
    isbn=input("please input isbn:")
    #if isbn not in repo.keys() 
    if isbn not in repo:
        print("isbn error, and input again:")
        return
    num=int(input("please input number:"))
    li.append([isbn, num])
    print(li)

def edit():
    id=int(input("which item to modify:"))
    id-=1
    if id<0 or id>=2:
        print("id is out of range: %d-%d" % (1,len(li)))
    num=int(input("please Reinput number:"))
    if num <= 0:
        print("input error, num must be postive")
    item=li[id]
    item[1]=num

def delete():
    id=int(input("which item to modify:"))
    id-=1
    if id<0 or id>=2:
        print("id is out of range: %d-%d" % (1,len(li)))
    del li[id]
def payment():
    show_list()
    print('\n'*3)
    import os
    os._exit(0)

my_cmds={'a':add, 'e':edit, 'd':delete, 'p':payment, 's':show_goods}
def show_command():
    cmd=input("please command:\n" + "{a|e|d|p|s}\n")
    if cmd not in my_cmds:
        print("The cmd your input doesn't existed")
    else:
        my_cmds[cmd]()

init_repo()    
#show_goods()
#add()
#add()
#edit()
#show_list()
while True:
    show_list()
    show_command()

